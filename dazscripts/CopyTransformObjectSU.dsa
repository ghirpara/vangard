/*
 * Copyright (C) 2025 Blue Moon Foundry Software
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
includeDir_oFILE = DzFile( getScriptFileName() );
util_path = includeDir_oFILE.path() + "/DazCopilotUtils.dsa";
include (util_path);

function CopyTransformObjectSU(){

	sFunctionName = 'sFunctionName';
    oScriptVars = init_script_utils(sFunctionName);

	oSourceNode = Scene.findNodeByLabel(oScriptVars['source-node'])
	oTargetNode = Scene.findNodeByLabel(oScriptVars['target-node'])

    if (oSourceNode == null) {
		log_error ("TransformObjectSU", {'message': 'Could not locate requested source node: ' + oScriptVars['source-node']});
		return;	    
    }

    if (oTargetNode == null) {
		log_error ("TransformObjectSU", {'message': 'Could not locate requested target node: ' + oScriptVars['target-node']});
		return;	    
    }

    var bTranslateNode=oScriptVars['translate'] || oScriptVars['all'];
    var bRotateNode=oScriptVars['rotate'] || oScriptVars['all'];
    var bScaleNode=oScriptVars['scale'] || oScriptVars['all'];

    log_info (sFunctionName,
	      {
		  'request': {
		      'source': oSourceNode.getLabel(),
		      'target': oTargetNode.getLabel(),
		      'translate': bTranslateNode,
		  	  'rotate': bRotateNode,
		      'scale': bScaleNode
		  }
	      }
	     );
		  
    transferNodeTransforms (
		oTargetNode,
		oSourceNode,
		bTranslateNode,
		bRotateNode,
		bScaleNode
	);
}

CopyTransformObjectSU();

