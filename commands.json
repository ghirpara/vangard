{
    "action": {
        "script-file": "ExecGenericActionSU.dsa",
        "description": "Execute the specified action with optional settings as a series of key=value pairs separated by commas",
        "args": [
            {
                "name": [
                    "action-class"
                ],
                "type": "str",
                "default": null,
                "description": "Class name of the action to execute"
            },
            {
                "name": [
                    "-s",
                    "--settings"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Settings for the action as a series of key=value pairs separated by commas"
            }
        ]
    },

    
    "lora-trainer-prep": {
        "script-file": "SingleSceneRendererSU.dsa",
        "description": "Render a matrixed serie of images suitable for LORA training.",
        "args": [
            {
                "name": [
                    "scene-files"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "A glob pattern that identifies the scene files to load. Each scene file should include a single model which has the hair and clothing applied"
            },
            {
                "name": [
                    "matrix-config"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Path to config file defining the render matrix of shots x poses x expressions"
            }
        ]
    },

    "save-content-item": {
        "script-file": "SaveSelectedContentSU.dsa",
        "description": "Save the selected items in the content library to the specified target location",
        "args": [
            {
                "name": [
                    "target-dir"
                ],
                "type": "str",
                "default": null,
                "description": "Location to save content item to"
            }
        ]
    },


    "scene-render": {
        "script-file": "SingleSceneRendererSU.dsa",
        "description": "Direct render the current scene, or a new scene file if specified, to the given output file.",
        "args": [
            {
                "name": [
                    "-s",
                    "--scene-file"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Name of the scene file to load."
            },
            {
                "name": [
                    "-o",
                    "--output-file"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Path to output file to save to"
            }
        ]
    },
    "drop-object": {
        "script-file": "DropObjectSU.dsa",
        "description": "Drop one object on top of another, respecting bounding box bondaries.",
        "args": [
              {
                "name": "source-node",
                "description": "Label of the object to be dropped",
                "type": "str",
                "default": null
            },
              {
                "name": "target-node",
                "description": "Label of the object to be dropped onto",
                "type": "str",
                "default": null
            }
        ]
    },
     "rotate-random": {
        "script-file": "CharacterRotateAndRenderSU.dsa",
        "description": "Rotate and render the selected character.",
        "args": [
            {
                "name": "object-name",
                "description": "Label of the object to rotate prior to rendering",
                "type": "str",
                "default": null
            },
			{
                "name": "lower",
                "description": "Starting rotation (in degrees)",
                "type": "int",
                "default": 0
            }
        ]
    },
    "rotate-render": {
        "script-file": "CharacterRotateAndRenderSU.dsa",
        "description": "Rotate and render the selected character.",
        "args": [
            {
                "name": "object-name",
                "description": "Label of the object to rotate prior to rendering",
                "type": "str",
                "default": null
            },
			{
                "name": "lower",
                "description": "Starting rotation (in degrees)",
                "type": "int",
                "default": 0
            },
            {
                "name": "upper",
                "description": "Ending rotation (in degrees). rotation-start must be smaller than rotation-end",
                "type": "int",
                "default": 180
            },
            {
                "name": "slices",
                "description": "How many rotations between start and end to rotate. If set to zero, only render, do not rotate.",
                "type": "int                                                ",
                "default": null
            },
          
            {
                "name": [
                    "-o",
                    "--output-file"
                ],
                "description": "Absolute path to directory to render images in. Default is to generate one from the scene file name.",
                "required": false,
                "type": "str",
                "default": null
            },
			{
                "name": [
                    "-s",
                    "--skip-render"
                ],
                "description": "Flag whether to render or the rotated character or not. Setting this flag skips the rendering step.",
                "required": false,
                "type": "bool",
                "default": false
            }
        ]
    },
    "transform-copy": {
        "script-file": "CopyTransformObjectSU.dsa",
        "description": "Perform translate, rotate, and/or scale operations on target node to match the transforms on the target node. ",
        "args": [
            {
                "name": "source-node",
                "description": "Node to translate from",
                "type": "str",
                "default": null
            },
            {
                "name": "target-node",
                "description": "Node to translate to",
                "type": "str",
                "default": null
            },
            {
                "name": [
                    "-r",
                    "--rotate"
                ],
                "description": "Apply the rotation transform",
                "required": false,
                "type": "bool",
                "default": null
            },
            {
                "name": [
                    "-t",
                    "--translate"
                ],
                "description": "Apply the translation transform",
                "required": false,
                "type": "bool",
                "default": null
            },
            {
                "name": [
                    "-s",
                    "--scale"
                ],
                "description": "Apply the scaling transform",
                "required": false,
                "type": "bool",
                "default": null
            },
            {
                "name": [
                    "-a",
                    "--all"
                ],
                "description": "Apply rotation, translation, and scaling trasforms",
                "required": false,
                "type": "bool",
                "default": null
            }
        ]
    },
    "create-cam": {
        "script-file": "CreateBasicCameraSU.dsa",
        "description": "Create a perspective camera with given name and camera type as parameters to generate the name of the camera along with the selected node label.",
        "args": [
            {
                "name": "cam-name",
                "description": "Name of the camera",
                "type": "str",
                "default": null
            },
            {
                "name": "cam-class",
                "description": "Class (type) of camera",
                "type": "str",
                "default": null
            },
            {
                "name": [
                    "-f",
                    "--focus"
                ],
                "description": "If true, turn DOF on the new camera",
                "required": false,
                "type": "bool",
                "default": false
            }
        ]
    },
    "create-group": {
        "script-file": "CreateGroupNodeSU.dsa",
        "description": "Group the selected nodes in the scene to the name specified.",
        "args": [
            {
                "name": "group-name",
                "description": "Name of the new group.",
                "type": "str",
                "default": null
            }
        ]
    },
    "copy-camera": {
        "script-file": "CopyNamedCameraToCurrentCameraSU.dsa",
        "description": "Copy the specified camera (by label) to the specified target camera, or the current viewport camera if target not specified",
        "args": [
            {
                "name": ["-s", "--source-camera"],
                "description": "Camera to copy from",
                "type": "str",
                "default": null
            },
            {
                "name": ["-t", "--target-camera"],
                "description": "Camera to copy to (optional)",
                "type": "str",
                "default": null
            }
        ]
    },

    "apply-pose": {

        "script-file": "ApplyGenericPoseSU.dsa",
        "description": "Apply the given named posed as pose file to the currently selected node or specified node",
        "args": [
            {
                "name": ["pose-file"],
                "description": "Absolute path to the pose file to be applied",
                "type": "str",
                "default": null
            },
            {
                "name": ["-t", "--target-node"],
                "description": "Label of the node to apply the pose to. If not specified, apply to the currently selected node.",
                "type": "str",
                "default": null
            }
        ]

    },

     "inc-scene": {
        "script-file": "SceneRollerSU.dsa",
        "description": "Save the current scene file incrementing the file name with a numerical, incrementing, postfix.",
        "args": []
    },

    "product-list": {
        "script-file": "ListSceneProductsSU.dsa",
        "description": "List the product information for objects in the current scene",
        "pre-scripts": [
            {
                "script-callback": "process_product_list_reset",
                "script-args": ["target_file"]
            }
        ],
        "post-scripts": [
            {
                "script-callback": "process_product_list",
                "script-args": ["target_file"]
            }
        ],
        "args": [
            {
                "name": ["-t", "--target-file"],
                "description": "File to write output information to",
                "type": "str",
                "default": "C:/Temp/products.json"
            },
            {
                "name": ["-n", "--node-context"],
                "description": "If specified, present the output in the context of nodes. Otherwise the default is to present output in the context of products.",
                "type": "bool",
                "default": false
            },
            {
                "name": ["-s", "--selected-only"],
                "description": "Only identify products for the currently selected node.",
                "type": "bool",
                "default": false
            }
        ]
    },
    "batch-render": {
        "script-file": "BatchRenderSU.dsa",
        "description": "Given a pattern of scene files, load each one and render it to the target location (default is studio-iray) with the given output file pattern",
        "pre-scripts": [
            {
                "script-callback": "extract_glob_to_list",
                "script-args": ["scene_files"]
            }
        ],
        "args": [
            {
                "name": [
                    "-s",
                    "--scene-files"
                ],
                "description": "Pattern of scene files to load, including glob support. See README for examples",
                "type": "str",
		        "required": false,
                "default": "_"
            },
            {
                "name": [
                    "-o",
                    "--output-path"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Path to directory where output files are to be written. If not specified, use the location of the scene file."
            },
            {
                "name": [
                    "-t",
                    "--target"
                ],
                "type": "str",
                "required": false,
                "default": "direct-file",
                "description": "Target of the render. Allowed values are local-to-file, local-to-window, or iray-server-bridge"
            },
            {
                "name": [
                    "-r",
                    "--resolution"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Resolution to render, overriding the resolution of the scene file, in WxH format (e.g. 1920x1080)"
            },
            {
                "name": [
                    "-c",
                    "--cameras"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Cameras to render for. Can be one of 'all_visible', 'viewport', or a pattern that maps to one or more visible cameras"
            },
             {
                "name": [
                    "-j",
                    "--job-name-pattern"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Pattern to use for naming job names or render output files. In the pattern, %s refers to the scene name, %%c the camera name, %%f the frame number, and %%r the render count"
             },
            {
                "name": [
                    "-f",
                    "--frames"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "Frames to render. Comma-separated list of frames that can include ranges and range patterns. See README for full detail and example."
            },
            {
                "name": [
                    "--iray-server"
                ],
                "type": "str",
                "required": false,
                "default": "127.0.0.1",
                "description": "For target iray-server the IP address or hostname of the iRay server/master to use."
            },
            {
                "name": [
                    "--iray-protocol"
                ],
                "type": "str",
                "required": false,
                "default": "http",
                "description": "Sets the http protocol to use. Allowed values are http or https."
            },
            {
                "name": [
                    "--iray-port"
                ],
                "type": "str",
                "required": false,
                "default": "9090",
                "description": "For target iray-server the TCP port of the iRay server/master."
            },
            {
                "name": [
                    "--iray-user"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "For target iray-server the username to connect to the iRay server/master. Must be specified here or in config file specified by --iray-config-file"
            },
            {
                "name": [
                    "--iray-password"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "For target iray-server the password to connect to the iRay server/master. Must be specified here or in config file specified by --iray-config-file"
            },
            {
                "name": [
                    "--iray-config-file"
                ],
                "type": "str",
                "required": false,
                "default": null,
                "description": "For target iray-server the configuration options file to use for iRay server/master configuration. Values in this file can be overridden by additional command line arguments"
            }

        ]
    }
}
